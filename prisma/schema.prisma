// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cars {
  id          Int        @id @default(autoincrement()) 
  vehicle     String
  type        String
  color       String
  fuel        String
  manufacturer String
  mass        Int
  imageUrl    String?
  price       Int
  description String
  yearMade    Int
  horsePower  Int
  
  Comment     Comment[]
  Favorite    Favorite[] // Add relation to Favorite
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  role       Role       @default(USER)
  tokens     Token[]
  comment    Comment[]
  Favorite   Favorite[] // Add relation to Favorite
}

model Token {
  token   String @id
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int 
  car       cars     @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId     Int
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  car       cars     @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId     Int
  createdAt DateTime @default(now())
  
  @@unique([userId, carId]) // Prevent duplicate favorites
}

enum Role {
  USER
  ADMIN
}